# This Yaml Document has been converted by ESAI Yaml Pipeline Conversion Tool.
name: $(Date:yyyyMMdd).$(Rev:r)
parameters:
- name: OfficialRelease
  displayName: "Build and publish an official release"
  type: boolean
  default: false
variables:
- name: Build.OfficialRelease
  value: ${{ parameters.OfficialRelease }}
- name: Codeql.Enabled
  value: true
- name: Codeql.ExcludePathPatterns
  value: 'src/BehaviorsSDKNative'
- name: SignType
  ${{ if eq(variables['Build.OfficialRelease'], 'true') }}:
    value: real
  ${{ else }}:
    value: test
- name: TeamName
  value: vscx-tools-authoring
- name: TimestampPackage
  value: ${{ not (parameters.OfficialRelease) }}
trigger:
  branches:
    include:
    - refs/heads/main
resources:
  repositories:
  - repository: MicroBuildTemplate
    type: git
    name: 1ESPipelineTemplates/MicroBuildTemplate
    ref: refs/tags/release
extends:
  template: azure-pipelines/MicroBuild.1ES.Official.yml@MicroBuildTemplate
  parameters:
    pool:
      name: VSEngSS-MicroBuild2022-1ES
    sdl:
      sourceAnalysisPool:
        name: AzurePipelines-EO
        image: 1ESPT-Windows2022
        os: windows
      autobaseline:
        enableForGitHub: false
    customBuildTags:
    - ES365AIMigrationTooling
    stages:
    - stage: stage
      jobs:
      - job: Build
        displayName: 'Build'
        timeoutInMinutes: 120
        pool:
          name: VSEngSS-MicroBuild2022-1ES
        templateContext:
          mb:
            signing:
              enabled: true
              signType: $(SignType)
            sbom:
              enabled: true
          outputs:
          - output: pipelineArtifact
            displayName: 'Publish Package Artifacts'
            targetPath: $(Build.ArtifactStagingDirectory)\Packages
            artifactName: Packages
          - output: nuget
            displayName: 'NuGet push to NuGet.org'
            condition: and(succeeded(), eq(variables['Build.OfficialRelease'], 'true'))
            packageParentPath: '$(Build.ArtifactStagingDirectory)\Packages'
            packagesToPush: $(Build.ArtifactStagingDirectory)\Packages\*.nupkg;!$(Build.ArtifactStagingDirectory)\Packages\*.symbols.nupkg
            nuGetFeedType: external
            publishFeedCredentials: XamlBehaviors-NuGet.org
        steps:
        - checkout: self
          clean: true
          fetchTags: false
        - task: DeleteFiles@1
          displayName: Delete output files
          inputs:
            SourceFolder: out
            Contents: '**\'
          
          # Temporary: update Visual Studio to latest
        - powershell: |
            Invoke-WebRequest -Uri https://aka.ms/vs/17/release/vs_enterprise.exe -OutFile $(Build.SourcesDirectory)\vs_enterprise.exe
            Start-Process -FilePath '$(Build.SourcesDirectory)\vs_enterprise.exe' -ArgumentList 'updateall','--downloadThenInstall','--quiet','--norestart' -Wait -RedirectStandardError $(ob_outputDirectory)\vs_installer.err.log -RedirectStandardOutput $(ob_outputDirectory)\vs_installer.log -WorkingDirectory '$(Build.SourcesDirectory)'
          displayName: Install Required Visual Studio Components
          workingDirectory: $(Build.SourcesDirectory)
          timeoutInMinutes: 30
        - task: UseDotNet@2
          displayName: Use .NET SDK 9.0.100
          inputs:
            version: 9.0.100
            performMultiLevelLookup: true
        - task: NuGetToolInstaller@1
          displayName: Use NuGet 6.x
          inputs:
            versionSpec: 6.x
        - task: NuGetAuthenticate@1
          displayName: NuGet Authenticate
        - task: NuGetCommand@2
          displayName: Restore BehaviorsSDKManaged.sln
          inputs:
            solution: src\BehaviorsSDKManaged\BehaviorsSDKManaged.sln
            selectOrConfig: config
        - task: MicroBuildSigningPlugin@4
          inputs:
            signType: '$(SignType)'
            feedSource: 'https://devdiv.pkgs.visualstudio.com/DefaultCollection/_packaging/MicroBuildToolset/nuget/v3/index.json'
          env:
            TeamName: '$(TeamName)'
        - task: VSBuild@1
          displayName: Build BehaviorsSDKManaged.sln
          inputs:
            solution: src\BehaviorsSDKManaged\BehaviorsSDKManaged.sln
            msbuildArgs: /p:ContinuousIntegrationBuild=true
            platform: Any CPU
            configuration: Release
            clean: true
        - task: VSBuild@1
          displayName: Build UWP Managed NuGet package
          inputs:
            solution: src\BehaviorsSDKManaged\Microsoft.Xaml.Interactivity.Design\Microsoft.Xaml.Interactivity.Design.csproj
            msbuildArgs: /t:Pack /p:SignType=$(SignType) /p:TimestampPackage=$(TimestampPackage) /p:PackageOutputPath="$(Build.SourcesDirectory)\out"
            configuration: Release
        - task: VSBuild@1
          displayName: Build WinUI Managed NuGet package
          inputs:
            solution: src\BehaviorsSDKManaged\Microsoft.Xaml.Interactivity.WinUI\Microsoft.Xaml.Interactivity.WinUI.csproj
            msbuildArgs: /t:Pack /p:SignType=$(SignType) /p:TimestampPackage=$(TimestampPackage) /p:PackageOutputPath="$(Build.SourcesDirectory)\out"
            configuration: Release
        - task: CopyFiles@2
          displayName: 'Copy Symbols to: $(Pipeline.Workspace)\Symbols'
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\out
            Contents: '**\bin\**\*.pdb'
            TargetFolder: $(Pipeline.Workspace)\Symbols
        - task: MicroBuildArchiveSymbols@5
          displayName: Archive Symbols
          condition: and(succeeded(), eq(variables['Build.OfficialRelease'], 'true'))
          inputs:
            SymbolsFeatureName: XamlBehaviors
            SymbolsProject: VS
            SymbolsAgentPath: $(Pipeline.Workspace)\Symbols
            SubmitToInternet: false
        - task: CopyFiles@2
          displayName: 'Copy NuGet Packages to: $(Build.ArtifactStagingDirectory)\Packages'
          inputs:
            SourceFolder: $(Build.SourcesDirectory)\out
            Contents: '**\*.nupkg'
            TargetFolder: $(Build.ArtifactStagingDirectory)\Packages
            OverWrite: true
            flattenFolders: true
          continueOnError: true
